{
	"info": {
		"_postman_id": "805a53b1-3c96-4aa6-9123-f0906da6547e",
		"name": "Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Request 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response data check\", function () {",
							"    var jsonData = pm.response.json();",
							"    var s_request_id = String(pm.collectionVariables.get(\"request_id\"));",
							"    pm.expect(jsonData.email).to.eql(\"Sample0\" + s_request_id + \"@ibm.xxx.com\");",
							"    pm.expect(jsonData.name).to.eql(\"Sample0\" + s_request_id);",
							"    pm.expect(jsonData.id).to.eql(s_request_id);",
							"    pm.expect(jsonData.password === pm.collectionVariables.get(\"password\"));",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than max ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.collectionVariables.get(\"max_response_time\")))",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"request_id\", 1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}{{path}}{{request_id}}",
					"host": [
						"{{url}}{{path}}{{request_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Request 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response data check\", function () {",
							"    var jsonData = pm.response.json();",
							"    var s_request_id = String(pm.collectionVariables.get(\"request_id\"));",
							"    pm.expect(jsonData.email).to.eql(\"Sample0\" + s_request_id + \"@ibm.xxx.com\");",
							"    pm.expect(jsonData.name).to.eql(\"Sample0\" + s_request_id);",
							"    pm.expect(jsonData.id).to.eql(s_request_id);",
							"    pm.expect(jsonData.password === pm.collectionVariables.get(\"password\"));",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than max ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.collectionVariables.get(\"max_response_time\")))",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"request_id\", parseInt(pm.collectionVariables.get(\"request_id\")) + 1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}{{path}}{{request_id}}",
					"host": [
						"{{url}}{{path}}{{request_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Request 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response data check\", function () {",
							"    var jsonData = pm.response.json();",
							"    var s_request_id = String(pm.collectionVariables.get(\"request_id\"));",
							"    pm.expect(jsonData.email).to.eql(\"Sample0\" + s_request_id + \"@ibm.xxx.com\");",
							"    pm.expect(jsonData.name).to.eql(\"Sample0\" + s_request_id);",
							"    pm.expect(jsonData.id).to.eql(s_request_id);",
							"    pm.expect(jsonData.password === pm.collectionVariables.get(\"password\"));",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than max ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.collectionVariables.get(\"max_response_time\")))",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"request_id\", parseInt(pm.collectionVariables.get(\"request_id\")) + 1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}{{path}}{{request_id}}",
					"host": [
						"{{url}}{{path}}{{request_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Request 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response data check\", function () {",
							"    var jsonData = pm.response.json();",
							"    var s_request_id = String(pm.collectionVariables.get(\"request_id\"));",
							"    pm.expect(jsonData.email).to.eql(\"Sample0\" + s_request_id + \"@ibm.xxx.com\");",
							"    pm.expect(jsonData.name).to.eql(\"Sample0\" + s_request_id);",
							"    pm.expect(jsonData.id).to.eql(s_request_id);",
							"    pm.expect(jsonData.password === pm.collectionVariables.get(\"password\"));",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than max ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.collectionVariables.get(\"max_response_time\")))",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"request_id\", parseInt(pm.collectionVariables.get(\"request_id\")) + 1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}{{path}}{{request_id}}",
					"host": [
						"{{url}}{{path}}{{request_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Request 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response data check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"該当するユーザーは存在しません。\");",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than max ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.collectionVariables.get(\"max_response_time\")))",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"request_id\", \"5\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}{{path}}{{request_id}}",
					"host": [
						"{{url}}{{path}}{{request_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Request a",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response data check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"検索に失敗しました。数字以外のIDが入力されています。\");",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than max ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.collectionVariables.get(\"max_response_time\")))",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"request_id\", \"a\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}{{path}}{{request_id}}",
					"host": [
						"{{url}}{{path}}{{request_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://jmavensampleapp:9080"
		},
		{
			"key": "path",
			"value": "/sample-app-api/user/findById/"
		},
		{
			"key": "request_id",
			"value": "1"
		},
		{
			"key": "password",
			"value": "123456"
		},
		{
			"key": "max_response_time",
			"value": "1000"
		}
	]
}
